{"ast":null,"code":"const CACHE_EXPIRY_MS = 60 * 60 * 1000; // 1 hour\n\n/**\n * Caches data to localStorage with a timestamp.\n * @param {string} key The key to store the data under.\n * @param {any} data The data to be stored.\n */\nexport const cacheData = (key, data) => {\n  try {\n    const item = {\n      payload: data,\n      timestamp: Date.now()\n    };\n    localStorage.setItem(key, JSON.stringify(item));\n  } catch (error) {\n    console.error(\"Error caching data for key \\\"\".concat(key, \"\\\":\"), error);\n  }\n};\n\n/**\n * Retrieves cached data from localStorage if it's not expired.\n * @param {string} key The key to retrieve data from.\n * @returns {any|null} The cached data payload or null if not found or expired.\n */\nexport const getCachedData = key => {\n  try {\n    const itemStr = localStorage.getItem(key);\n    if (!itemStr) {\n      return null;\n    }\n    const item = JSON.parse(itemStr);\n    const isExpired = Date.now() - item.timestamp > CACHE_EXPIRY_MS;\n    if (isExpired) {\n      localStorage.removeItem(key);\n      return null;\n    }\n    return item.payload;\n  } catch (error) {\n    console.error(\"Error retrieving cached data for key \\\"\".concat(key, \"\\\":\"), error);\n    return null;\n  }\n};\n\n/**\n * Checks if the browser is currently online.\n * @returns {boolean} True if the browser is online.\n */\nexport const isOnline = () => {\n  return navigator.onLine;\n};","map":{"version":3,"names":["CACHE_EXPIRY_MS","cacheData","key","data","item","payload","timestamp","Date","now","localStorage","setItem","JSON","stringify","error","console","concat","getCachedData","itemStr","getItem","parse","isExpired","removeItem","isOnline","navigator","onLine"],"sources":["/Users/pablognecco/Dropbox (Personal)/Studio/Cursor/network/src/utils/cacheManager.js"],"sourcesContent":["const CACHE_EXPIRY_MS = 60 * 60 * 1000; // 1 hour\n\n/**\n * Caches data to localStorage with a timestamp.\n * @param {string} key The key to store the data under.\n * @param {any} data The data to be stored.\n */\nexport const cacheData = (key, data) => {\n  try {\n    const item = {\n      payload: data,\n      timestamp: Date.now(),\n    };\n    localStorage.setItem(key, JSON.stringify(item));\n  } catch (error) {\n    console.error(`Error caching data for key \"${key}\":`, error);\n  }\n};\n\n/**\n * Retrieves cached data from localStorage if it's not expired.\n * @param {string} key The key to retrieve data from.\n * @returns {any|null} The cached data payload or null if not found or expired.\n */\nexport const getCachedData = (key) => {\n  try {\n    const itemStr = localStorage.getItem(key);\n    if (!itemStr) {\n      return null;\n    }\n\n    const item = JSON.parse(itemStr);\n    const isExpired = (Date.now() - item.timestamp) > CACHE_EXPIRY_MS;\n\n    if (isExpired) {\n      localStorage.removeItem(key);\n      return null;\n    }\n\n    return item.payload;\n  } catch (error) {\n    console.error(`Error retrieving cached data for key \"${key}\":`, error);\n    return null;\n  }\n};\n\n/**\n * Checks if the browser is currently online.\n * @returns {boolean} True if the browser is online.\n */\nexport const isOnline = () => {\n    return navigator.onLine;\n}\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACtC,IAAI;IACF,MAAMC,IAAI,GAAG;MACXC,OAAO,EAAEF,IAAI;MACbG,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC;IACDC,YAAY,CAACC,OAAO,CAACR,GAAG,EAAES,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,iCAAAE,MAAA,CAAgCb,GAAG,UAAMW,KAAK,CAAC;EAC9D;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMG,aAAa,GAAId,GAAG,IAAK;EACpC,IAAI;IACF,MAAMe,OAAO,GAAGR,YAAY,CAACS,OAAO,CAAChB,GAAG,CAAC;IACzC,IAAI,CAACe,OAAO,EAAE;MACZ,OAAO,IAAI;IACb;IAEA,MAAMb,IAAI,GAAGO,IAAI,CAACQ,KAAK,CAACF,OAAO,CAAC;IAChC,MAAMG,SAAS,GAAIb,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGJ,IAAI,CAACE,SAAS,GAAIN,eAAe;IAEjE,IAAIoB,SAAS,EAAE;MACbX,YAAY,CAACY,UAAU,CAACnB,GAAG,CAAC;MAC5B,OAAO,IAAI;IACb;IAEA,OAAOE,IAAI,CAACC,OAAO;EACrB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,2CAAAE,MAAA,CAA0Cb,GAAG,UAAMW,KAAK,CAAC;IACtE,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMS,QAAQ,GAAGA,CAAA,KAAM;EAC1B,OAAOC,SAAS,CAACC,MAAM;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}