{"ast":null,"code":"// CSV Parser for MC-Network data\nexport var parseCSV = function parseCSV(csvContent) {\n  var lines = csvContent.trim().split('\\n');\n  if (lines.length < 2) return [];\n\n  // Get headers from first line\n  var headers = lines[0].split(',').map(function (h) {\n    return h.trim();\n  });\n\n  // Find column indices\n  var nameIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('company name');\n  });\n  var logoIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('logo url');\n  });\n  var headerImageIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('header image');\n  });\n  var qrCodeIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('qr code');\n  });\n  var photoIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('photo url');\n  });\n  var taglineIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('tagline');\n  });\n  var descriptionIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('description');\n  });\n  var detroitStoryIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('detroit');\n  });\n  var fundingIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('funding');\n  });\n  var websiteIndex = headers.findIndex(function (h) {\n    return h.toLowerCase().includes('website');\n  });\n\n  // Industry columns (there are multiple)\n  var industryIndices = headers.map(function (h, i) {\n    return h.toLowerCase().includes('industry') ? i : -1;\n  }).filter(function (i) {\n    return i !== -1;\n  });\n  var companies = [];\n\n  // Parse each data line (skip header)\n  var _loop = function _loop() {\n      var line = lines[i];\n      if (!line.trim()) return 0; // continue\n\n      // Split CSV line handling quoted values\n      var columns = parseCSVLine(line);\n      if (columns.length < 2) return 0; // continue\n      var name = columns[nameIndex] && columns[nameIndex].trim();\n      if (!name || name === 'Company Name') return 0; // continue\n      // Skip empty or header rows\n\n      // Extract industries\n      var industries = industryIndices.map(function (index) {\n        return columns[index] && columns[index].trim();\n      }).filter(function (industry) {\n        return industry && industry !== 'Industry' && industry !== 'Modifiers';\n      }).slice(0, 3); // Take max 3 industries\n\n      // Create company object\n      var company = {\n        // id: columns[nameIndex].toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, ''),\n        name: name,\n        logo: columns[logoIndex] && columns[logoIndex].trim() || getPlaceholderLogo(name),\n        headerImage: columns[headerImageIndex] && columns[headerImageIndex].trim() || getPlaceholderImage(name, 1),\n        qrCode: columns[qrCodeIndex] && columns[qrCodeIndex].trim() || '',\n        tagline: columns[taglineIndex] && columns[taglineIndex].trim() || '',\n        description: columns[descriptionIndex] && columns[descriptionIndex].trim() || 'No description available',\n        detroitStory: columns[detroitStoryIndex] && columns[detroitStoryIndex].trim() || '',\n        funding: columns[fundingIndex] && columns[fundingIndex].trim() || 'Not disclosed',\n        website: columns[websiteIndex] && columns[websiteIndex].trim() || '#',\n        industry: industries.length > 0 ? industries : ['Technology'],\n        images: [columns[photoIndex] && columns[photoIndex].trim() || getPlaceholderImage(name, 1), getPlaceholderImage(name, 2)].filter(function (img) {\n          return img;\n        }),\n        // Remove empty images\n        tags: industries.concat(['Detroit', 'Startup']),\n        employees: getRandomEmployeeCount(),\n        location: 'Detroit, MI',\n        founded: getRandomFoundedYear()\n      };\n      companies.push(company);\n    },\n    _ret;\n  for (var i = 1; i < lines.length; i++) {\n    _ret = _loop();\n    if (_ret === 0) continue;\n  }\n  console.log(\"Parsed \".concat(companies.length, \" companies from CSV\"));\n  return companies.slice(0, 62); // Limit to 62 companies\n};\n\n// Helper function to parse CSV line with proper quote handling\nvar parseCSVLine = function parseCSVLine(line) {\n  var result = [];\n  var current = '';\n  var inQuotes = false;\n  for (var i = 0; i < line.length; i++) {\n    var char = line[i];\n    if (char === '\"') {\n      inQuotes = !inQuotes;\n    } else if (char === ',' && !inQuotes) {\n      result.push(current);\n      current = '';\n    } else {\n      current += char;\n    }\n  }\n  result.push(current); // Add the last field\n  return result;\n};\n\n// Generate consistent company ID from name\nvar generateCompanyId = function generateCompanyId(name) {\n  return name.toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, '');\n};\n\n// Generate placeholder logo URL\nvar getPlaceholderLogo = function getPlaceholderLogo(name) {\n  var colors = ['FAC853', 'FF6B6B', '4ECDC4', '45B7D1', '96C93F', 'FFEAA7'];\n  var colorIndex = name.length % colors.length;\n  var initials = name.split(' ').map(function (word) {\n    return word[0];\n  }).join('').slice(0, 2).toUpperCase();\n  return \"https://via.placeholder.com/200x200/\".concat(colors[colorIndex], \"/000000?text=\").concat(initials);\n};\n\n// Generate placeholder image URL\nvar getPlaceholderImage = function getPlaceholderImage(name, index) {\n  var colors = ['FF6B6B', '4ECDC4', '45B7D1', '96C93F', 'FFEAA7', 'DDA0DD'];\n  var colorIndex = (name.length + index) % colors.length;\n  return \"https://via.placeholder.com/800x400/\".concat(colors[colorIndex], \"/FFFFFF?text=\").concat(name, \"+\").concat(index);\n};\n\n// Generate random employee count\nvar getRandomEmployeeCount = function getRandomEmployeeCount() {\n  var ranges = ['1-10', '11-50', '51-200', '201-500', '501-1000'];\n  return ranges[Math.floor(Math.random() * ranges.length)];\n};\n\n// Generate random founded year\nvar getRandomFoundedYear = function getRandomFoundedYear() {\n  var currentYear = new Date().getFullYear();\n  var startYear = currentYear - 10; // Companies founded in last 10 years\n  return (startYear + Math.floor(Math.random() * 10)).toString();\n};","map":{"version":3,"names":["parseCSV","csvContent","lines","trim","split","length","headers","map","h","nameIndex","findIndex","toLowerCase","includes","logoIndex","headerImageIndex","qrCodeIndex","photoIndex","taglineIndex","descriptionIndex","detroitStoryIndex","fundingIndex","websiteIndex","industryIndices","i","filter","companies","_loop","line","columns","parseCSVLine","name","industries","index","industry","slice","company","logo","getPlaceholderLogo","headerImage","getPlaceholderImage","qrCode","tagline","description","detroitStory","funding","website","images","img","tags","concat","employees","getRandomEmployeeCount","location","founded","getRandomFoundedYear","push","_ret","console","log","result","current","inQuotes","char","generateCompanyId","replace","colors","colorIndex","initials","word","join","toUpperCase","ranges","Math","floor","random","currentYear","Date","getFullYear","startYear","toString"],"sources":["/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/src/utils/csvParser.js"],"sourcesContent":["// CSV Parser for MC-Network data\nexport const parseCSV = (csvContent) => {\n  const lines = csvContent.trim().split('\\n');\n  if (lines.length < 2) return [];\n\n  // Get headers from first line\n  const headers = lines[0].split(',').map(h => h.trim());\n  \n  // Find column indices\n  const nameIndex = headers.findIndex(h => h.toLowerCase().includes('company name'));\n  const logoIndex = headers.findIndex(h => h.toLowerCase().includes('logo url'));\n  const headerImageIndex = headers.findIndex(h => h.toLowerCase().includes('header image'));\n  const qrCodeIndex = headers.findIndex(h => h.toLowerCase().includes('qr code'));\n  const photoIndex = headers.findIndex(h => h.toLowerCase().includes('photo url'));\n  const taglineIndex = headers.findIndex(h => h.toLowerCase().includes('tagline'));\n  const descriptionIndex = headers.findIndex(h => h.toLowerCase().includes('description'));\n  const detroitStoryIndex = headers.findIndex(h => h.toLowerCase().includes('detroit'));\n  const fundingIndex = headers.findIndex(h => h.toLowerCase().includes('funding'));\n  const websiteIndex = headers.findIndex(h => h.toLowerCase().includes('website'));\n  \n  // Industry columns (there are multiple)\n  const industryIndices = headers.map((h, i) => \n    h.toLowerCase().includes('industry') ? i : -1\n  ).filter(i => i !== -1);\n\n  const companies = [];\n\n  // Parse each data line (skip header)\n  for (let i = 1; i < lines.length; i++) {\n    const line = lines[i];\n    if (!line.trim()) continue;\n\n    // Split CSV line handling quoted values\n    const columns = parseCSVLine(line);\n    \n    if (columns.length < 2) continue;\n\n    const name = columns[nameIndex] && columns[nameIndex].trim();\n    if (!name || name === 'Company Name') continue; // Skip empty or header rows\n\n    // Extract industries\n    const industries = industryIndices\n      .map(index => columns[index] && columns[index].trim())\n      .filter(industry => industry && industry !== 'Industry' && industry !== 'Modifiers')\n      .slice(0, 3); // Take max 3 industries\n\n    // Create company object\n    const company = {\n      // id: columns[nameIndex].toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').replace(/^-|-$/g, ''),\n      name: name,\n      logo: (columns[logoIndex] && columns[logoIndex].trim()) || getPlaceholderLogo(name),\n      headerImage: (columns[headerImageIndex] && columns[headerImageIndex].trim()) || getPlaceholderImage(name, 1),\n      qrCode: (columns[qrCodeIndex] && columns[qrCodeIndex].trim()) || '',\n      tagline: (columns[taglineIndex] && columns[taglineIndex].trim()) || '',\n      description: (columns[descriptionIndex] && columns[descriptionIndex].trim()) || 'No description available',\n      detroitStory: (columns[detroitStoryIndex] && columns[detroitStoryIndex].trim()) || '',\n      funding: (columns[fundingIndex] && columns[fundingIndex].trim()) || 'Not disclosed',\n      website: (columns[websiteIndex] && columns[websiteIndex].trim()) || '#',\n      industry: industries.length > 0 ? industries : ['Technology'],\n      images: [\n        (columns[photoIndex] && columns[photoIndex].trim()) || getPlaceholderImage(name, 1),\n        getPlaceholderImage(name, 2)\n      ].filter(img => img), // Remove empty images\n      tags: industries.concat(['Detroit', 'Startup']),\n      employees: getRandomEmployeeCount(),\n      location: 'Detroit, MI',\n      founded: getRandomFoundedYear()\n    };\n\n    companies.push(company);\n  }\n\n  console.log(`Parsed ${companies.length} companies from CSV`);\n  return companies.slice(0, 62); // Limit to 62 companies\n};\n\n// Helper function to parse CSV line with proper quote handling\nconst parseCSVLine = (line) => {\n  const result = [];\n  let current = '';\n  let inQuotes = false;\n  \n  for (let i = 0; i < line.length; i++) {\n    const char = line[i];\n    \n    if (char === '\"') {\n      inQuotes = !inQuotes;\n    } else if (char === ',' && !inQuotes) {\n      result.push(current);\n      current = '';\n    } else {\n      current += char;\n    }\n  }\n  \n  result.push(current); // Add the last field\n  return result;\n};\n\n// Generate consistent company ID from name\nconst generateCompanyId = (name) => {\n  return name.toLowerCase()\n    .replace(/[^a-z0-9]/g, '-')\n    .replace(/-+/g, '-')\n    .replace(/^-|-$/g, '');\n};\n\n// Generate placeholder logo URL\nconst getPlaceholderLogo = (name) => {\n  const colors = ['FAC853', 'FF6B6B', '4ECDC4', '45B7D1', '96C93F', 'FFEAA7'];\n  const colorIndex = name.length % colors.length;\n  const initials = name.split(' ').map(word => word[0]).join('').slice(0, 2).toUpperCase();\n  return `https://via.placeholder.com/200x200/${colors[colorIndex]}/000000?text=${initials}`;\n};\n\n// Generate placeholder image URL\nconst getPlaceholderImage = (name, index) => {\n  const colors = ['FF6B6B', '4ECDC4', '45B7D1', '96C93F', 'FFEAA7', 'DDA0DD'];\n  const colorIndex = (name.length + index) % colors.length;\n  return `https://via.placeholder.com/800x400/${colors[colorIndex]}/FFFFFF?text=${name}+${index}`;\n};\n\n// Generate random employee count\nconst getRandomEmployeeCount = () => {\n  const ranges = ['1-10', '11-50', '51-200', '201-500', '501-1000'];\n  return ranges[Math.floor(Math.random() * ranges.length)];\n};\n\n// Generate random founded year\nconst getRandomFoundedYear = () => {\n  const currentYear = new Date().getFullYear();\n  const startYear = currentYear - 10; // Companies founded in last 10 years\n  return (startYear + Math.floor(Math.random() * 10)).toString();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}