{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useTransform } from \"framer-motion\";\nexport function useIconTransform(_ref) {\n  _s();\n  let {\n    planeX,\n    planeY,\n    xOffset,\n    yOffset,\n    dimensions\n  } = _ref;\n  const {\n    icon,\n    grid,\n    device\n  } = dimensions;\n\n  // Calculate the distance from the center of the screen\n  const distanceFromCenterX = useTransform(planeX, planeXValue => {\n    const screenCenterX = device.width / 2;\n    const iconScreenX = xOffset + planeXValue;\n    return iconScreenX - screenCenterX;\n  });\n  const distanceFromCenterY = useTransform(planeY, planeYValue => {\n    const screenCenterY = device.height / 2;\n    const iconScreenY = yOffset + planeYValue;\n    return iconScreenY - screenCenterY;\n  });\n\n  // A direct distance calculation would be expensive.\n  // By using the separate x and y distances, we can calculate scale and transform\n  // with a little more trigonometry but much higher performance.\n  const scale = useTransform([distanceFromCenterX, distanceFromCenterY], _ref2 => {\n    let [dx, dy] = _ref2;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const maxDistance = Math.sqrt(Math.pow(device.width / 2, 2) + Math.pow(device.height / 2, 2));\n\n    // Scale icons down the further they are from the center\n    const newScale = 1 - distance / maxDistance * 0.7;\n    return Math.max(newScale, 0.3); // Minimum scale\n  });\n  return {\n    scale\n  };\n}\n_s(useIconTransform, \"qSE5H4DRSiLQg4YGosJt7OxXeSY=\", false, function () {\n  return [useTransform, useTransform, useTransform];\n});","map":{"version":3,"names":["useTransform","useIconTransform","_ref","_s","planeX","planeY","xOffset","yOffset","dimensions","icon","grid","device","distanceFromCenterX","planeXValue","screenCenterX","width","iconScreenX","distanceFromCenterY","planeYValue","screenCenterY","height","iconScreenY","scale","_ref2","dx","dy","distance","Math","sqrt","maxDistance","pow","newScale","max"],"sources":["/Users/pablognecco/Dropbox (Personal)/Studio/Cursor/network/src/AppleWatchDock/use-icon-transform.js"],"sourcesContent":["import { useTransform } from \"framer-motion\";\n\nexport function useIconTransform({ planeX, planeY, xOffset, yOffset, dimensions }) {\n  const { icon, grid, device } = dimensions;\n\n  // Calculate the distance from the center of the screen\n  const distanceFromCenterX = useTransform(planeX, (planeXValue) => {\n    const screenCenterX = device.width / 2;\n    const iconScreenX = xOffset + planeXValue;\n    return iconScreenX - screenCenterX;\n  });\n\n  const distanceFromCenterY = useTransform(planeY, (planeYValue) => {\n    const screenCenterY = device.height / 2;\n    const iconScreenY = yOffset + planeYValue;\n    return iconScreenY - screenCenterY;\n  });\n\n  // A direct distance calculation would be expensive.\n  // By using the separate x and y distances, we can calculate scale and transform\n  // with a little more trigonometry but much higher performance.\n  const scale = useTransform(\n    [distanceFromCenterX, distanceFromCenterY],\n    ([dx, dy]) => {\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const maxDistance = Math.sqrt(Math.pow(device.width / 2, 2) + Math.pow(device.height / 2, 2));\n      \n      // Scale icons down the further they are from the center\n      const newScale = 1 - (distance / maxDistance) * 0.7;\n      return Math.max(newScale, 0.3); // Minimum scale\n    }\n  );\n\n  return { scale };\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,eAAe;AAE5C,OAAO,SAASC,gBAAgBA,CAAAC,IAAA,EAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAAN,IAAA;EAC/E,MAAM;IAAEO,IAAI;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGH,UAAU;;EAEzC;EACA,MAAMI,mBAAmB,GAAGZ,YAAY,CAACI,MAAM,EAAGS,WAAW,IAAK;IAChE,MAAMC,aAAa,GAAGH,MAAM,CAACI,KAAK,GAAG,CAAC;IACtC,MAAMC,WAAW,GAAGV,OAAO,GAAGO,WAAW;IACzC,OAAOG,WAAW,GAAGF,aAAa;EACpC,CAAC,CAAC;EAEF,MAAMG,mBAAmB,GAAGjB,YAAY,CAACK,MAAM,EAAGa,WAAW,IAAK;IAChE,MAAMC,aAAa,GAAGR,MAAM,CAACS,MAAM,GAAG,CAAC;IACvC,MAAMC,WAAW,GAAGd,OAAO,GAAGW,WAAW;IACzC,OAAOG,WAAW,GAAGF,aAAa;EACpC,CAAC,CAAC;;EAEF;EACA;EACA;EACA,MAAMG,KAAK,GAAGtB,YAAY,CACxB,CAACY,mBAAmB,EAAEK,mBAAmB,CAAC,EAC1CM,KAAA,IAAc;IAAA,IAAb,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAAF,KAAA;IACP,MAAMG,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAC7C,MAAMI,WAAW,GAAGF,IAAI,CAACC,IAAI,CAACD,IAAI,CAACG,GAAG,CAACnB,MAAM,CAACI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAGY,IAAI,CAACG,GAAG,CAACnB,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE7F;IACA,MAAMW,QAAQ,GAAG,CAAC,GAAIL,QAAQ,GAAGG,WAAW,GAAI,GAAG;IACnD,OAAOF,IAAI,CAACK,GAAG,CAACD,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EAClC,CACF,CAAC;EAED,OAAO;IAAET;EAAM,CAAC;AAClB;AAACnB,EAAA,CAhCeF,gBAAgB;EAAA,QAIFD,YAAY,EAMZA,YAAY,EAS1BA,YAAY;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}