{"ast":null,"code":"import _slicedToArray from \"/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useTransform } from \"framer-motion\";\nexport function useIconTransform(_ref) {\n  var planeX = _ref.planeX,\n    planeY = _ref.planeY,\n    xOffset = _ref.xOffset,\n    yOffset = _ref.yOffset,\n    dimensions = _ref.dimensions;\n  var icon = dimensions.icon,\n    grid = dimensions.grid,\n    device = dimensions.device; // Calculate the distance from the center of the screen\n  var distanceFromCenterX = useTransform(planeX, function (planeXValue) {\n    var screenCenterX = device.width / 2;\n    var iconScreenX = xOffset + planeXValue;\n    return iconScreenX - screenCenterX;\n  });\n  var distanceFromCenterY = useTransform(planeY, function (planeYValue) {\n    var screenCenterY = device.height / 2;\n    var iconScreenY = yOffset + planeYValue;\n    return iconScreenY - screenCenterY;\n  });\n\n  // A direct distance calculation would be expensive.\n  // By using the separate x and y distances, we can calculate scale and transform\n  // with a little more trigonometry but much higher performance.\n  var scale = useTransform([distanceFromCenterX, distanceFromCenterY], function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n      dx = _ref3[0],\n      dy = _ref3[1];\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    var maxDistance = Math.sqrt(Math.pow(device.width / 2, 2) + Math.pow(device.height / 2, 2));\n\n    // Scale icons down the further they are from the center\n    var newScale = 1 - distance / maxDistance * 0.7;\n    return Math.max(newScale, 0.3); // Minimum scale\n  });\n  return {\n    scale: scale\n  };\n}","map":{"version":3,"names":["useTransform","useIconTransform","_ref","planeX","planeY","xOffset","yOffset","dimensions","icon","grid","device","distanceFromCenterX","planeXValue","screenCenterX","width","iconScreenX","distanceFromCenterY","planeYValue","screenCenterY","height","iconScreenY","scale","_ref2","_ref3","_slicedToArray","dx","dy","distance","Math","sqrt","maxDistance","pow","newScale","max"],"sources":["/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/src/AppleWatchDock/use-icon-transform.js"],"sourcesContent":["import { useTransform } from \"framer-motion\";\n\nexport function useIconTransform({ planeX, planeY, xOffset, yOffset, dimensions }) {\n  const { icon, grid, device } = dimensions;\n\n  // Calculate the distance from the center of the screen\n  const distanceFromCenterX = useTransform(planeX, (planeXValue) => {\n    const screenCenterX = device.width / 2;\n    const iconScreenX = xOffset + planeXValue;\n    return iconScreenX - screenCenterX;\n  });\n\n  const distanceFromCenterY = useTransform(planeY, (planeYValue) => {\n    const screenCenterY = device.height / 2;\n    const iconScreenY = yOffset + planeYValue;\n    return iconScreenY - screenCenterY;\n  });\n\n  // A direct distance calculation would be expensive.\n  // By using the separate x and y distances, we can calculate scale and transform\n  // with a little more trigonometry but much higher performance.\n  const scale = useTransform(\n    [distanceFromCenterX, distanceFromCenterY],\n    ([dx, dy]) => {\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const maxDistance = Math.sqrt(Math.pow(device.width / 2, 2) + Math.pow(device.height / 2, 2));\n      \n      // Scale icons down the further they are from the center\n      const newScale = 1 - (distance / maxDistance) * 0.7;\n      return Math.max(newScale, 0.3); // Minimum scale\n    }\n  );\n\n  return { scale };\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,eAAe;AAE5C,OAAO,SAASC,gBAAgBA,CAAAC,IAAA,EAAmD;EAAA,IAAhDC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,UAAU,GAAAL,IAAA,CAAVK,UAAU;EAAA,IACrEC,IAAI,GAAmBD,UAAU,CAAjCC,IAAI;IAAEC,IAAI,GAAaF,UAAU,CAA3BE,IAAI;IAAEC,MAAM,GAAKH,UAAU,CAArBG,MAAM,EAE1B;EACA,IAAMC,mBAAmB,GAAGX,YAAY,CAACG,MAAM,EAAE,UAACS,WAAW,EAAK;IAChE,IAAMC,aAAa,GAAGH,MAAM,CAACI,KAAK,GAAG,CAAC;IACtC,IAAMC,WAAW,GAAGV,OAAO,GAAGO,WAAW;IACzC,OAAOG,WAAW,GAAGF,aAAa;EACpC,CAAC,CAAC;EAEF,IAAMG,mBAAmB,GAAGhB,YAAY,CAACI,MAAM,EAAE,UAACa,WAAW,EAAK;IAChE,IAAMC,aAAa,GAAGR,MAAM,CAACS,MAAM,GAAG,CAAC;IACvC,IAAMC,WAAW,GAAGd,OAAO,GAAGW,WAAW;IACzC,OAAOG,WAAW,GAAGF,aAAa;EACpC,CAAC,CAAC;;EAEF;EACA;EACA;EACA,IAAMG,KAAK,GAAGrB,YAAY,CACxB,CAACW,mBAAmB,EAAEK,mBAAmB,CAAC,EAC1C,UAAAM,KAAA,EAAc;IAAA,IAAAC,KAAA,GAAAC,cAAA,CAAAF,KAAA;MAAZG,EAAE,GAAAF,KAAA;MAAEG,EAAE,GAAAH,KAAA;IACN,IAAMI,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAC7C,IAAMI,WAAW,GAAGF,IAAI,CAACC,IAAI,CAACD,IAAI,CAACG,GAAG,CAACrB,MAAM,CAACI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAGc,IAAI,CAACG,GAAG,CAACrB,MAAM,CAACS,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE7F;IACA,IAAMa,QAAQ,GAAG,CAAC,GAAIL,QAAQ,GAAGG,WAAW,GAAI,GAAG;IACnD,OAAOF,IAAI,CAACK,GAAG,CAACD,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;EAClC,CACF,CAAC;EAED,OAAO;IAAEX,KAAK,EAALA;EAAM,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module"}