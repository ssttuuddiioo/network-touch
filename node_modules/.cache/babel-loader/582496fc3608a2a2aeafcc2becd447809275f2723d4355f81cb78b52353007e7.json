{"ast":null,"code":"import _objectSpread from \"/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/src/components/CompanyImage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getEmojiPlaceholder } from '../utils/emojiPlaceholders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyImage = _ref => {\n  _s();\n  let {\n    company,\n    imageType = 'logo',\n    style,\n    className\n  } = _ref;\n  const [imageSrc, setImageSrc] = useState(null);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    // Reset state when company or imageType changes\n    setImageSrc(null);\n    setError(false);\n    if (!company || !company.id) {\n      setError(true);\n      return;\n    }\n\n    // First check if we have a direct URL from Supabase\n    if (imageType === 'logo' && company.logo && company.logo.trim() !== '') {\n      // Use logo URL from Supabase\n      setImageSrc(company.logo);\n      return;\n    } else if (imageType === 'photo' && company.headerImage && company.headerImage.trim() !== '') {\n      // Use header image URL from Supabase\n      setImageSrc(company.headerImage);\n      return;\n    }\n\n    // Fallback to file system if no URL is provided\n    const extensions = ['png', 'jpg', 'jpeg', 'svg', 'webp'];\n    const basePath = \"/images/companies/\".concat(imageType, \"s/\").concat(company.id);\n\n    // Set a preferred initial path. The onError will handle cycling through others.\n    const initialSrc = \"\".concat(basePath, \".\").concat(imageType === 'logo' ? 'png' : 'jpg');\n    setImageSrc(\"\".concat(initialSrc, \"?t=\").concat(new Date().getTime())); // Cache-busting timestamp\n  }, [company, imageType]);\n  const handleError = () => {\n    const currentSrc = imageSrc;\n    if (!currentSrc) {\n      setError(true);\n      return;\n    }\n    const extensions = ['png', 'jpg', 'jpeg', 'svg', 'webp'];\n    const currentExt = currentSrc.split('.').pop();\n    const currentIndex = extensions.indexOf(currentExt);\n\n    // Try the next extension in the list\n    if (currentIndex > -1 && currentIndex < extensions.length - 1) {\n      const nextExt = extensions[currentIndex + 1];\n      const nextSrc = currentSrc.replace(\".\".concat(currentExt), \".\".concat(nextExt));\n      setImageSrc(\"\".concat(nextSrc, \"?t=\").concat(new Date().getTime())); // Cache-busting timestamp\n    } else {\n      // If we've tried all extensions, show the fallback\n      setError(true);\n    }\n  };\n  if (error || !imageSrc) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'var(--bg-secondary)',\n        fontSize: style && style.height ? style.height / 2 : '24px',\n        // Estimate font size from height\n        userSelect: 'none'\n      }),\n      className: className,\n      children: getEmojiPlaceholder(company)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: imageSrc,\n    alt: \"\".concat(company.name, \" \").concat(imageType),\n    style: style,\n    className: className,\n    onError: handleError\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyImage, \"WVM7p499mzlNNqC8diOrizg3DXE=\");\n_c = CompanyImage;\nexport default CompanyImage;\nvar _c;\n$RefreshReg$(_c, \"CompanyImage\");","map":{"version":3,"names":["React","useState","useEffect","getEmojiPlaceholder","jsxDEV","_jsxDEV","CompanyImage","_ref","_s","company","imageType","style","className","imageSrc","setImageSrc","error","setError","id","logo","trim","headerImage","extensions","basePath","concat","initialSrc","Date","getTime","handleError","currentSrc","currentExt","split","pop","currentIndex","indexOf","length","nextExt","nextSrc","replace","_objectSpread","display","alignItems","justifyContent","backgroundColor","fontSize","height","userSelect","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","name","onError","_c","$RefreshReg$"],"sources":["/Users/pablognecco/Dropbox (Personal)/Studio/Civic/pitch/framer-motion-bubbles/src/components/CompanyImage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getEmojiPlaceholder } from '../utils/emojiPlaceholders';\n\nconst CompanyImage = ({ company, imageType = 'logo', style, className }) => {\n  const [imageSrc, setImageSrc] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Reset state when company or imageType changes\n    setImageSrc(null);\n    setError(false);\n\n    if (!company || !company.id) {\n        setError(true);\n        return;\n    }\n\n    // First check if we have a direct URL from Supabase\n    if (imageType === 'logo' && company.logo && company.logo.trim() !== '') {\n        // Use logo URL from Supabase\n        setImageSrc(company.logo);\n        return;\n    } else if (imageType === 'photo' && company.headerImage && company.headerImage.trim() !== '') {\n        // Use header image URL from Supabase\n        setImageSrc(company.headerImage);\n        return;\n    }\n\n    // Fallback to file system if no URL is provided\n    const extensions = ['png', 'jpg', 'jpeg', 'svg', 'webp'];\n    const basePath = `/images/companies/${imageType}s/${company.id}`;\n    \n    // Set a preferred initial path. The onError will handle cycling through others.\n    const initialSrc = `${basePath}.${imageType === 'logo' ? 'png' : 'jpg'}`;\n    setImageSrc(`${initialSrc}?t=${new Date().getTime()}`); // Cache-busting timestamp\n\n  }, [company, imageType]);\n\n  const handleError = () => {\n    const currentSrc = imageSrc;\n    if (!currentSrc) {\n        setError(true);\n        return;\n    }\n\n    const extensions = ['png', 'jpg', 'jpeg', 'svg', 'webp'];\n    const currentExt = currentSrc.split('.').pop();\n    const currentIndex = extensions.indexOf(currentExt);\n    \n    // Try the next extension in the list\n    if (currentIndex > -1 && currentIndex < extensions.length - 1) {\n        const nextExt = extensions[currentIndex + 1];\n        const nextSrc = currentSrc.replace(`.${currentExt}`, `.${nextExt}`);\n        setImageSrc(`${nextSrc}?t=${new Date().getTime()}`); // Cache-busting timestamp\n    } else {\n        // If we've tried all extensions, show the fallback\n        setError(true);\n    }\n  };\n\n  if (error || !imageSrc) {\n    return (\n      <div\n        style={{\n          ...style,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'var(--bg-secondary)',\n          fontSize: (style && style.height) ? style.height / 2 : '24px', // Estimate font size from height\n          userSelect: 'none'\n        }}\n        className={className}\n      >\n        {getEmojiPlaceholder(company)}\n      </div>\n    );\n  }\n\n  return (\n    <img\n      src={imageSrc}\n      alt={`${company.name} ${imageType}`}\n      style={style}\n      className={className}\n      onError={handleError}\n    />\n  );\n};\n\nexport default CompanyImage;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,YAAY,GAAGC,IAAA,IAAuD;EAAAC,EAAA;EAAA,IAAtD;IAAEC,OAAO;IAAEC,SAAS,GAAG,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAL,IAAA;EACrE,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd;IACAY,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAAC,KAAK,CAAC;IAEf,IAAI,CAACP,OAAO,IAAI,CAACA,OAAO,CAACQ,EAAE,EAAE;MACzBD,QAAQ,CAAC,IAAI,CAAC;MACd;IACJ;;IAEA;IACA,IAAIN,SAAS,KAAK,MAAM,IAAID,OAAO,CAACS,IAAI,IAAIT,OAAO,CAACS,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpE;MACAL,WAAW,CAACL,OAAO,CAACS,IAAI,CAAC;MACzB;IACJ,CAAC,MAAM,IAAIR,SAAS,KAAK,OAAO,IAAID,OAAO,CAACW,WAAW,IAAIX,OAAO,CAACW,WAAW,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1F;MACAL,WAAW,CAACL,OAAO,CAACW,WAAW,CAAC;MAChC;IACJ;;IAEA;IACA,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;IACxD,MAAMC,QAAQ,wBAAAC,MAAA,CAAwBb,SAAS,QAAAa,MAAA,CAAKd,OAAO,CAACQ,EAAE,CAAE;;IAEhE;IACA,MAAMO,UAAU,MAAAD,MAAA,CAAMD,QAAQ,OAAAC,MAAA,CAAIb,SAAS,KAAK,MAAM,GAAG,KAAK,GAAG,KAAK,CAAE;IACxEI,WAAW,IAAAS,MAAA,CAAIC,UAAU,SAAAD,MAAA,CAAM,IAAIE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;EAE1D,CAAC,EAAE,CAACjB,OAAO,EAAEC,SAAS,CAAC,CAAC;EAExB,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,UAAU,GAAGf,QAAQ;IAC3B,IAAI,CAACe,UAAU,EAAE;MACbZ,QAAQ,CAAC,IAAI,CAAC;MACd;IACJ;IAEA,MAAMK,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;IACxD,MAAMQ,UAAU,GAAGD,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC9C,MAAMC,YAAY,GAAGX,UAAU,CAACY,OAAO,CAACJ,UAAU,CAAC;;IAEnD;IACA,IAAIG,YAAY,GAAG,CAAC,CAAC,IAAIA,YAAY,GAAGX,UAAU,CAACa,MAAM,GAAG,CAAC,EAAE;MAC3D,MAAMC,OAAO,GAAGd,UAAU,CAACW,YAAY,GAAG,CAAC,CAAC;MAC5C,MAAMI,OAAO,GAAGR,UAAU,CAACS,OAAO,KAAAd,MAAA,CAAKM,UAAU,OAAAN,MAAA,CAAQY,OAAO,CAAE,CAAC;MACnErB,WAAW,IAAAS,MAAA,CAAIa,OAAO,SAAAb,MAAA,CAAM,IAAIE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC;IACzD,CAAC,MAAM;MACH;MACAV,QAAQ,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAED,IAAID,KAAK,IAAI,CAACF,QAAQ,EAAE;IACtB,oBACER,OAAA;MACEM,KAAK,EAAA2B,aAAA,CAAAA,aAAA,KACA3B,KAAK;QACR4B,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,eAAe,EAAE,qBAAqB;QACtCC,QAAQ,EAAGhC,KAAK,IAAIA,KAAK,CAACiC,MAAM,GAAIjC,KAAK,CAACiC,MAAM,GAAG,CAAC,GAAG,MAAM;QAAE;QAC/DC,UAAU,EAAE;MAAM,EAClB;MACFjC,SAAS,EAAEA,SAAU;MAAAkC,QAAA,EAEpB3C,mBAAmB,CAACM,OAAO;IAAC;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;EAEA,oBACE7C,OAAA;IACE8C,GAAG,EAAEtC,QAAS;IACduC,GAAG,KAAA7B,MAAA,CAAKd,OAAO,CAAC4C,IAAI,OAAA9B,MAAA,CAAIb,SAAS,CAAG;IACpCC,KAAK,EAAEA,KAAM;IACbC,SAAS,EAAEA,SAAU;IACrB0C,OAAO,EAAE3B;EAAY;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN,CAAC;AAAC1C,EAAA,CArFIF,YAAY;AAAAiD,EAAA,GAAZjD,YAAY;AAuFlB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}